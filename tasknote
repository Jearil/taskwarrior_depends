#!/bin/bash

###############################################################################
# tasknote - associate note file with individual tasks in taskwarrior
# 
# Copyright 2011, Alan Bowen, bowen@tcnj.edu.
# All rights reserved.
#
# based on taskopen - file based notes with taskwarrior
#
# Copyright 2010, Johannes Schlatow.
# All rights reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the
#
#     Free Software Foundation, Inc.,
#     51 Franklin Street, Fifth Floor,
#     Boston, MA
#     02110-1301
#     USA
#
###############################################################################

EDITOR=vim
TASKBIN=task

# If you sync tasks FOLDER should be a location that syncs and is available to
# other computers, i.e. /users/dropbox/tasknotes
# FOLDER to store notes in, must already exist!
FOLDER="/home/iamnafet/notes/"

# Preferred extension for tasknotes
EXT=".txt"

# Message that gets annotated to the task to indicate that notes exist
NOTEMSG="Notes"

# Display usage if task number not supplied on cli
if [ $# != 1 ]; then
	echo "Usage: $0 <id>"
	exit 1
fi

# determine if notes file already exists
DESCRIPTION="TASK_`task $* | grep Description | sed "s/Description\s*//g" | sed "s/ /_/g"`"
FILE="$FOLDER$DESCRIPTION"
fileexists=0
if [ -f "$FILE" ]; then
  fileexists=1
fi


if [ $fileexists = 0 ]; then
	echo $DESCRIPTION > "$FILE"
	echo "===================================" >> "$FILE"
else
	cp "$FILE" "$FILE.old"
	l=$(awk ' END { print NR }' "$FILE.old")
	echo $DESCRIPTION > "$FILE"
	echo "===================================" >> "$FILE"
	tail -n $(expr $l - 2) "$FILE.old" >> "$FILE"
	rm "$FILE.old"
fi

#create/edit $FILE with editor
$SHELL -c "$EDITOR \"$FILE\""

# if note was just created, add NOTEMSG as annotation to task
if [ $fileexists = 0 ]; then
  if [ -f "$FILE" ]; then
    if [ `grep ".\+" "$FILE" | wc -l | cut -d' ' -f1` -le 2 ]; then
      $SHELL -c "$TASKBIN $* -notes"
    else
      $SHELL -c "$TASKBIN $* +notes"
    fi
 fi
else
  if [ `grep ".\+" "$FILE" | wc -l | cut -d' ' -f1` -le 2 ]; then
    $SHELL -c "$TASKBIN $* -notes"
  else
    $SHELL -c "$TASKBIN $* +notes"
  fi
fi

exit 0

